// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using library_ms_webapi.Data;

#nullable disable

namespace library_ms_webapi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("library_ms_webapi.Models.Book", b =>
                {
                    b.Property<string>("Isbn")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Isbn");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Author");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("Description");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Genre");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsAvailable");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("PublishedDate");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Publisher");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.HasKey("Isbn");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("library_ms_webapi.Models.BookBorrowedHistory", b =>
                {
                    b.Property<string>("MemberId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MemberId");

                    b.Property<string>("Isbn")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Isbn");

                    b.Property<DateTime>("ReservedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ReservedDate");

                    b.HasKey("MemberId", "Isbn");

                    b.ToTable("BooksBorrowedHistory");
                });

            modelBuilder.Entity("library_ms_webapi.Models.Librarian", b =>
                {
                    b.Property<string>("StaffId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("StaffId");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("City");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("LastName");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext")
                        .HasColumnName("MiddleName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("PhoneNumber");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int")
                        .HasColumnName("PostalCode");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Province");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Role");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("StreetName");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Suburb");

                    b.HasKey("StaffId");

                    b.ToTable("Librarians");
                });

            modelBuilder.Entity("library_ms_webapi.Models.Member", b =>
                {
                    b.Property<string>("MemberId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MemberId");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("City");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("LastName");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext")
                        .HasColumnName("MiddleName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("PhoneNumber");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int")
                        .HasColumnName("PostalCode");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Province");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Role");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("StreetName");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Suburb");

                    b.HasKey("MemberId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("library_ms_webapi.Models.OverdueBook", b =>
                {
                    b.Property<string>("MemberId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MemberId");

                    b.Property<string>("Isbn")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Isbn");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DueDate");

                    b.Property<double>("FineAmount")
                        .HasColumnType("double")
                        .HasColumnName("FineAmount");

                    b.Property<int>("PastDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ReservedDate");

                    b.HasKey("MemberId", "Isbn");

                    b.ToTable("OverdueBooks");
                });

            modelBuilder.Entity("library_ms_webapi.Models.ReservedBook", b =>
                {
                    b.Property<string>("MemberId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MemberId");

                    b.Property<string>("Isbn")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Isbn");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DueDate");

                    b.Property<DateTime>("ReservedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ReservedDate");

                    b.HasKey("MemberId", "Isbn");

                    b.ToTable("ReservedBooks");
                });

            modelBuilder.Entity("library_ms_webapi.Models.SettledBook", b =>
                {
                    b.Property<string>("MemberId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MemberId");

                    b.Property<string>("Isbn")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Isbn");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DueDate");

                    b.Property<DateTime>("ReservedDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ReservedDate");

                    b.Property<DateTime>("SettledDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("SettledDate");

                    b.HasKey("MemberId", "Isbn");

                    b.ToTable("SettledBooksBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
